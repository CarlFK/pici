---
- name: create pxe & d-i directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /srv/pxe
    - /srv/pxe/d-i
    - /srv/pxe/scripts

- name: create late_command.sh
  copy:
    src: files/scripts/late_command.sh
    dest: /srv/pxe/scripts/late_command.sh

- name: write late_command.cfg
  template:
    src: templates/late_command.cfg.j2
    dest: /srv/pxe/scripts/late_command.cfg

- name: write ansible-firstboot.sh
  copy:
    src: files/scripts/ansible-firstboot.sh
    dest: /srv/pxe/scripts/ansible-firstboot.sh

- name: write ansible-firstboot.service
  copy:
    src: files/scripts/ansible-firstboot.service
    dest: /srv/pxe/scripts/ansible-firstboot.service

- name: Generate PXE key to ssh into D-I
  user:
    name: root
    generate_ssh_key: yes  # This will not overwrite an existing SSH key.
    ssh_key_type: ed25519

- name: Register PXE ssh key
  slurp:
    src: /root/.ssh/id_ed25519.pub
  register: pxe_root_ssh_key

- name: Add PXE ssh key to authorized_keys
  authorized_key:
    user: root
    key: "{{ pxe_root_ssh_key.content | b64decode }}"

- name: copy authorized_keys to D-I config
  copy:
    remote_src: true
    src: /root/.ssh/authorized_keys
    dest: /srv/pxe/scripts/authorized_keys

- name: check if early_command.sh exists
  stat:
    path: /srv/pxe/scripts/early_command.sh
  register: early_command

- name: create a skeleton early_command.sh
  copy:
    src: files/scripts/early_command.sh
    dest: /srv/pxe/scripts/early_command.sh
  when: not early_command.stat.exists

- name: copy static preseeds
  copy:
    src: files/d-i/{{ item }}
    dest: /srv/pxe/d-i/
  with_items: "{{ debian_suites + ubuntu_suites }}"

- name: write preseed_local_flavor.cfg
  template:
    src: preseed_local.cfg.j2
    dest: /srv/pxe/d-i/preseed_local_{{ item.key }}.cfg
  with_dict:
    debian: "{{ debian_host }}"
    ubuntu: "{{ ubuntu_host }}"
