---
- name: create nginx content directories
  file:
    path: "{{ item }}"
    state: directory
    owner: www-data
    group: www-data
    mode: 0755
  with_items:
    - "{{ streaming.backend.data_root }}"
    - "{{ streaming.backend.data_root }}/www"
    - "{{ streaming.backend.data_root }}/hls"
    - "{{ streaming.backend.data_root }}/dump"
  tags:
    - streaming

- name: use tmpfs for hls
  lineinfile:
    dest: /etc/fstab
    line: "tmpfs {{ streaming.backend.data_root }}/hls tmpfs \
           uid=www-data,gid=www-data,mode=0755 0 2"
    regexp: "\\s{{ streaming.backend.data_root }}/hls\\s"
  notify: mount all
  tags:
    - streaming

- name: create nginx dump directories for rooms
  file:
    path: "{{ streaming.backend.data_root }}/dump/{{ item }}"
    state: directory
    owner: www-data
    group: www-data
    mode: 0755
  with_items: "{{ streaming.rooms }}"
  when: streaming.dump
  tags:
    - streaming

- name: install nginx streaming backend http configuration
  template:
    src: nginx/sites-enabled/streaming-backend-http.conf.j2
    dest: /etc/nginx/sites-enabled/streaming-backend-http.conf
    owner: root
    group: root
    mode: 0644
  notify: reload nginx
  tags:
    - streaming

- name: force nginx reload before tls cert handling
  meta: flush_handlers

- name: generate tls certificate
  include_role:
    name: cam/srv/tls-certificates
  vars:
    basename: streaming_backend
    common_name: "{{ streaming.backend.server_name }}"
    subject_alt_names: []
    self_sign: False
    letsencrypt_do_nginx_vhost: False
  when: not skip_unit_test
  tags:
    - streaming

- name: Install common Nginx TLS config
  include_role:
    name: cam/srv/tls-certificates
    tasks_from: nginx_common
  when: not skip_unit_test
  tags:
    - streaming

- name: install nginx streaming backend https configuration
  template:
    src: nginx/sites-enabled/streaming-backend-https.conf.j2
    dest: /etc/nginx/sites-enabled/streaming-backend-https.conf
    owner: root
    group: root
    mode: 0644
  notify: reload nginx
  tags:
    - streaming

- name: install nginx streaming backend rtmp configuration
  template:
    src: nginx/rtmp/backend.conf.j2
    dest: /etc/nginx/rtmp/backend.conf
  notify: restart nginx
  tags:
    - streaming
    - streaming-backend_config

- name: create index.html for streaming backend
  template:
    src: index.html.j2
    dest: "{{ streaming.backend.data_root }}/www/index.html"
    owner: www-data
    group: www-data
    mode: 0644
  tags:
    - streaming
