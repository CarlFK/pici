# install_django.yml
---
- name: create site dir
  file:
    path: "{{ app_dir }}/pib"
    state: directory

- name: copy the core pib site files
  copy:
    src: "files/pib/pib/{{ item }}"
    dest: "{{ app_dir }}/pib/"
  loop:
    - __init__.py
    - settings.py
    - urls.py
    - asgi.py
# - local_settings.py
  tags:
    - django

- name: copy manage.py into site dir
  copy:
    src: "files/pib/manage.py"
    dest: "{{ app_dir }}"

- name: chmod u+x manage.py
  file:
    path: "{{ app_dir }}/manage.py"
    mode: 'u+x'

# Run Django collectstatic
# - name: Run manage.py collectstatic
#   community.general.django_manage:
#     command: collectstatic
#     app_path: "{{ app_dir }}"
#     virtualenv: "{{ app_dir }}/venv"

# Run Django manage.py makemigrations
- name: Run manage.py makemigrations
  community.general.django_manage:
    command: makemigrations
    app_path: "{{ app_dir }}"
    virtualenv: "{{ app_dir }}/venv"

# Run Django manage.py migrate
- name: Run manage.py migrate
  community.general.django_manage:
    command: migrate
    app_path: "{{ app_dir }}"
    virtualenv: "{{ app_dir }}/venv"

- name: Load the initial_data fixture into the application
  community.general.django_manage:
    command: loaddata
    app_path: "{{ app_dir }}"
    fixtures: "files/pib/pibfpgas/fixtures{{ fixture_path }}"
    virtualenv: "{{ app_dir }}/venv"
  when: fixture_path is defined

# Change allowed hosts to include the server IP address
- name: add server IP address to allowed hosts
  lineinfile:
    path: "{{ app_dir }}/{{ django_project_name }}/settings.py"
    state: present
    regexp: '^ALLOWED_HOSTS = '
    line: "ALLOWED_HOSTS = ['{{ eth_uplink_static_address }}','{{ domain_name }}']"
  tags:
    - django

- name: pass the pi's user pw
  lineinfile:
    path: "{{ app_dir }}/{{ django_project_name }}/settings.py"
    state: present
    regexp: '^pi_pw = '
    line: "pi_pw = '{{pi_pw|b64encode}}'"
  tags:
    - django

- name: pass the pi's user pw
  lineinfile:
    path: "{{ app_dir }}/{{ django_project_name }}/settings.py"
    state: present
    regexp: '^domain_name = '
    line: "domain_name = '{{ domain_name }}'"
  tags:
    - django

